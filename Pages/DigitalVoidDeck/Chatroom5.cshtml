@page
@inject Tools.IUserAttributes UserAttributes
@model KampongTalk.Pages.DigitalVoidDeck.ChatroomModel
@{
}

<link rel="stylesheet" href="~/css/ChatRoom.css">

<div class="container">

    <hr />
    <h1 class="display title is-8 ml-30">@Model.LangData.digimap.chatfive</h1>
    <hr />
    <div id="messagearea" class="row" style="overflow-y: scroll; height: 530px">
        <div><b>@Model.LangData.digimap.chatsuccess</b></div>

        <div class="row">
            <div class="col-6">
                <ul id="messageList"></ul>
            </div>
        </div>


    </div>
    <hr />
    <div class="messageinputbox" id="messageinput">
        <input type="text" id="message" placeholder="Enter your message" style='width: 89%; height: 50px; font-size: 20pt;' autocomplete="off" />
        <input type="button" id="sendButton" style='width:10%; height: 50px; font-size: 20pt;' value="Send" />
    </div>
</div>


<!-- Using signal R library that helps with real time applications-->
<script src="~/js/signalr.min.js"></script>
<script>

    "use strict";

    var connection = new signalR.HubConnectionBuilder().withUrl("/chatHub").build();


    //get username of current user
    var username = "@UserAttributes.getUsername()";




    //Disable send button until connection is established
    document.getElementById("sendButton").disabled = true;


    connection.on("ReceiveMessage", function (user, message) {
        // encode message
        var msg = message.replace(/&/g, "&amp;").replace(/</g, "&lt;").replace(/>/g, "&gt;");

        //if message is sent by user themselve, don't neeed to append name
        if (user == username) {
            var li = document.createElement("div");

            var liMsg = document.createElement("div");
            li.setAttribute("class", "message-box-holder");
            liMsg.setAttribute("class", "message-box");
            liMsg.textContent = msg;
            li.appendChild(liMsg);
            document.getElementById("messageList").appendChild(li);
        }
        else {
            var li = document.createElement("div");
            var liName = document.createElement("div");
            var liMsg = document.createElement("div");
            li.setAttribute("class", "message-box-holder");
            liName.setAttribute("class", "message-sender");
            liMsg.setAttribute("class", "message-box message-partner");
            liName.textContent = user;
            liMsg.textContent = msg;
            li.appendChild(liName);
            li.appendChild(liMsg);
            document.getElementById("messageList").appendChild(li);
        }
    });

    //when connection is completed, allow sendbutton to be used
    connection.start().then(function () {
        document.getElementById("sendButton").disabled = false;
    }).catch(function (err) {
        return console.error(err.toString());
    });


    // when send button is clicked, post message together with name
    document.getElementById("sendButton").addEventListener("click", function (event) {
        var message = document.getElementById("message").value;
        connection.invoke("SendMessage", username, message).then(function () {
            // clears message in placeholder input area
            document.getElementById("message").value = "";
        }).catch(function (err) {
            return console.error(err.toString());
        });
        event.preventDefault();
    });


</script>